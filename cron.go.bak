package main

import (
	"log"
	"time"

	"github.com/EDDYCJY/go-gin-example/models"
	"github.com/EDDYCJY/go-gin-example/pkg/logging"
	"github.com/robfig/cron"
)

func main() {
	log.Println("straring....")
	logging.Info("straring ......")

	//会根据本地时间创建一个新（空白）的 Cron job runner
	c := cron.New()

	//AddFunc 会向 Cron job runner 添加一个 func ，以按给定的时间表运行
	c.AddFunc("* * * * * *", func() {
		log.Println("Run models.CLeanAllTag...")
		logging.Info("Run models.CLeanAllTag...")
		models.CleanAllTag()
	})

	c.AddFunc("* * * * * *", func() {
		log.Println("Run models.CLeanAllArticle...")
		logging.Info("Run models.CLeanAllArticle...")
		models.CleanAllArticle()
	})

	c.Start()
	//会创建一个新的定时器，持续你设定的时间 d 后发送一个 channel 消息
	t1 := time.NewTimer(time.Second * 10)

	//阻塞 select 等待 channel
	for {
		select {
		case <-t1.C:
			//会重置定时器，让它重新开始计时
			t1.Reset(time.Second * 10)
		}
	}

}
